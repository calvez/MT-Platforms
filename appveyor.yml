environment:
  matrix:
    - TARGET_VERSION: 4
    - TARGET_VERSION: 5
init:
- ps: iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
install:
- appveyor DownloadFile https://github.com/Lexikos/AutoHotkey_L/releases/download/v1.1.30.03/AutoHotkey_1.1.30.03_setup.exe -FileName AHK_setup.exe
- ps: >-
    If ($env:TARGET_VERSION -eq 4) {
      echo "Downloading MetaTrader 4..."
      wget "https://web.archive.org/web/20160112133258if_/https://download.mql5.com/cdn/web/metaquotes.software.corp/mt4/mt4setup.exe?utm_campaign=www.metatrader4.com" -OutFile mt_setup.exe
    }
    ElseIf ($env:TARGET_VERSION -eq 5) {
      echo "Downloading MetaTrader 5..."
      wget "https://download.mql5.com/cdn/web/metaquotes.software.corp/mt5/mt5setup.exe" -OutFile mt_setup.exe
    }
    Else {
      echo "Unknown MetaTrader version specified. The TARGET_VERSION value in matrix needs to be 4 or 5."
      $host.SetShouldExit(1)
    }
- ps: set MT_SETUP_VERSION (Get-Item 'mt_setup.exe').VersionInfo.FileVersion
- AHK_setup.exe /S
- set "REPODIR=%cd%"
- ps: type scripts\ahk\install_mt${env:TARGET_VERSION}.ahk
- ps: C:\Progra~1\AutoHotkey\AutoHotkey.exe /ErrorStdOut scripts\ahk\install_mt${env:TARGET_VERSION}.ahk 2>&1 | more
- ps: >-
    If ($env:TARGET_VERSION -eq 4) {
      set MT_VERSION (Get-Item 'C:\Program Files (x86)\MetaTrader 4\terminal.exe').VersionInfo.FileVersion
      set ME_VERSION (Get-Item 'C:\Program Files (x86)\MetaTrader 4\metaeditor.exe').VersionInfo.FileVersion
    }
    ElseIf ($env:TARGET_VERSION -eq 5) {
      set MT_VERSION (Get-Item 'C:\Program Files\MetaTrader 5\terminal64.exe').VersionInfo.FileVersion
      set ME_VERSION (Get-Item 'C:\Program Files\MetaTrader 5\metaeditor64.exe').VersionInfo.FileVersion
    }
    Else {
      echo "Error: Unsupported platform version!"
    }
- ps: echo "MetaTrader terminal version is $MT_VERSION"
- ps: >-
    If ($env:TARGET_VERSION -eq 4) {
      Reg export "HKCU\Software\MetaQuotes Software\MetaTrader 4" "C:\\Program Files (x86)\\MetaTrader 4\\registry.reg"
    }
    ElseIf ($env:TARGET_VERSION -eq 5) {
      Reg export "HKCU\Software\MetaQuotes Software\MetaTrader 5" "C:\\Program Files\\MetaTrader 5\\registry.reg"
    }
    Else {
      echo "Error: Unsupported platform version!"
    }
- ps: set MT_ZIP "mt-${MT_VERSION}.zip"
- ps: >-
    If ($env:TARGET_VERSION -eq 4) {
      7z a ${MT_ZIP} "C:\\Program Files (x86)\\MetaTrader 4"
    }
    ElseIf ($env:TARGET_VERSION -eq 5) {
      7z a ${MT_ZIP} "C:\\Program Files\\MetaTrader 5"
    }
    Else {
      echo "Error: Unsupported platform version!"
    }
- dir *.zip
- ps: $env:MT_VERSION=$MT_VERSION
- ps: $env:ME_VERSION=$ME_VERSION
on_failure:
- ps: echo "Failed to install MetaTrader Setup $MT_SETUP_VERSION!"
build: off
platform: x86
artifacts:
- path: 'mt-*.zip'
  name: zip
deploy:
  artifact: zip
  auth_token:
    # GitHub Personal Access Token (https://github.com/settings/tokens/new).
    # You need at least "public_repo" scope for public repo or "repo" scope for private repos.
    # Copy and paste access token into value encryptor at https://ci.appveyor.com/tools/encrypt and replace following "secure" value with encrypted value.
    # kenrob: secure: CfvlXEnsZxBCuJ1p850Q8mIju3dWBj/6dlL13JC4z0aLCPcJCeozbiu/FrbCnZUq
    secure: ul1b9vC+77tWckLQF9yIcoWKNhuLAU1x98ajZuKPHmHoSMHpZwhq8GkenXChcv8A
  description: "MetaTrader v$(MT_VERSION) & MetaEditor v$(ME_VERSION)"
  draft: false
  force_update: false
  prerelease: false
  provider: GitHub
  tag: $(MT_VERSION)
